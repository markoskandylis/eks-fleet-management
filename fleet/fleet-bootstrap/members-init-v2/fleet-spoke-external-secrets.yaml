apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: fleet-spoke-external-secrets-secrets
  namespace: argocd
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
  - matrix:
      generators:
        - matrix:
            generators:
              - clusters:
                  selector:
                    matchLabels:
                      fleet_member: spoke
                      use_remote_argo: "true"
                  values:
                    chartName: fleet-secret         
                    chartPath: "charts/fleet-secret"
                    remoteSecret: "false"
              - git:
                  repoURL: '{{ .metadata.annotations.fleet_repo_url }}'
                  revision: '{{ .metadata.annotations.fleet_repo_revision }}'
                  files:
                    - path: "{{ .metadata.annotations.fleet_repo_basepath }}/bootstrap/versions/fleetSecrets.yaml"
        - list:
            elementsYaml: "{{ .releases | toJson }}"
  ###################################################
  #base template (everything common)
  ###################################################
  template:
    metadata:
      name: 'fleet-spoke-external-secrets-{{.name}}'
    spec:
      project: default
      destination:
        namespace: platform-system
        name: '{{ .name }}'
      # syncPolicy is identical for both variants
      syncPolicy:
        automated:
          selfHeal: false
          allowEmpty: true
          prune: false
        retry:
          limit: 100
        syncOptions:
          - CreateNamespace=true
  ###################################################
  # conditional sources
  ###################################################
  templatePatch: |
    spec:
      project: default
      source:
       {{- if  eq .use_helm_repo_path "false" }}
        repoURL: '{{ .chartRepo }}'
        chart: '{{ default .values.chartName .ecrChartName  }}'
        targetRevision: '{{.version}}'
      {{- else }}
        repoURL: '{{ .metadata.annotations.fleet_repo_url }}'
        path: '{{ .values.chartPath }}'
        targetRevision: '{{ .metadata.annotations.fleet_repo_revision }}'
      {{- end }}
        helm:
          releaseName: '{{.name}}'
          valuesObject:
            secretStore:
              enabled: true
              {{- if eq .values.remoteSecret "true" }}
              role: '{{default "" .metadata.annotations.external_secrets_cross_account_role}}'
              {{- end }}
              name: fleet-eks-secret-store
              region: '{{default "eu-west-2" .metadata.annotations.aws_central_region}}'
            externalSecret:
              enabled: true
              server: self
              secretStoreRefName: fleet-eks-secret-store
              secretStoreRefKind: SecretStore
              clusterName: '{{.name}}'
              secretManagerSecretName: '{{.metadata.annotations.secret_manager_secret_name}}'
              labels:
                fleet_member: '{{.metadata.labels.fleet_member}}'
                tenant: '{{.metadata.labels.tenant}}'
                environment: '{{.metadata.labels.environment}}'
                enable_remote_resources: '{{.metadata.labels.enable_remote_resources}}'
                enable_remote_addons: '{{.metadata.labels.enable_remote_addons}}'
                addonsRelease: '{{.metadata.labels.addonsRelease}}'
                monitoringRelease: '{{.metadata.labels.addonsRelease}}'
                resourcesRelease: '{{.metadata.labels.resourcesRelease}}'
              annotations:
                addons_repo_basepath: '{{.metadata.annotations.addons_repo_basepath}}'
                addons_repo_path: '{{.metadata.annotations.addons_repo_path}}'
                addons_repo_revision: '{{.metadata.annotations.addons_repo_revision}}'
                addons_repo_url:  '{{.metadata.annotations.addons_repo_url}}'
                fleet_repo_basepath: '{{.metadata.annotations.fleet_repo_basepath}}'
                fleet_repo_path: '{{.metadata.annotations.fleet_repo_path}}'
                fleet_repo_revision: '{{.metadata.annotations.fleet_repo_revision}}'
                fleet_repo_url:  '{{.metadata.annotations.fleet_repo_url}}'
                resources_repo_basepath: '{{.metadata.annotations.resources_repo_basepath}}'
                resources_repo_path: '{{.metadata.annotations.resources_repo_path}}'
                resources_repo_revision: '{{.metadata.annotations.resources_repo_revision}}'
                resources_repo_url:  '{{.metadata.annotations.resources_repo_url}}'
