apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: fleet-hub-secret-store
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions:
    - missingkey=error
  generators:
  - matrix:
      generators:
        - matrix:
            generators:
              - clusters:
                  selector:
                    matchLabels:
                      fleet_member: hub-cluster
                  values:
                    chartName: fleet-secret
                    chartPath: "charts/fleet-secret"
                    applicationSetGroup: "fleet"
                    fleet_memeber: hub-cluster
              - git:
                  repoURL: '{{ .metadata.annotations.fleet_repo_url }}'
                  revision: '{{ .metadata.annotations.fleet_repo_revision }}'
                  files:
                    - path: "{{ .metadata.annotations.fleet_repo_basepath }}/bootstrap/versions/fleetSecrets.yaml"
        - list:
            elementsYaml: "{{ .releases | toJson }}"
  ###################################################
  #base template (everything common)
  ###################################################
  template:
    metadata:
      name: 'fleet-hub-secret-store-{{.nameNormalized}}'
    spec:
      project: default
      destination:
        namespace: argocd
        name: '{{ .name }}'
      # syncPolicy is identical for both variants
      syncPolicy:
        automated:
          selfHeal: false
          allowEmpty: true
          prune: false
        retry:
          limit: 100
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
  ###################################################
  # conditional sources
  ###################################################
  templatePatch: |
    {{- $commonValuesPath := printf "%s/%s/values.yaml" .values.applicationSetGroup .values.chartName -}}
    {{- $repoNames := list "addons" "resources" -}}

    {{- $environment := .metadata.labels.environment -}}
    
    {{- $tenantPath := "" -}}
    {{- if and (hasKey . "tenant") .tenant -}}
      {{- $tenantPath = printf "%s" .tenant -}}
    {{- else if (index .metadata.labels "tenant") -}}
      {{- $tenantPath = printf "%s" .metadata.labels.tenant -}}
    {{- end -}}


    {{- $clusterName := "" -}}
    {{- if and (hasKey . "clusterName") .clusterName -}}
      {{- $clusterName = .clusterName -}}
    {{- else  -}}
      {{- $clusterName = .name -}}
    {{- end -}}

    {{- $pathPatterns := list
      (printf "%s/defaults" $tenantPath) 
      (printf "%s/environments/%s/defaults" $tenantPath $environment) 
      (printf "%s/environments/%s/clusters/%s" $tenantPath $environment $clusterName) 
    -}}

    spec:
      sources:
      {{- range $repoName := $repoNames }}
        - repoURL: '{{default (index $.metadata.annotations (printf "%s_repo_url" $repoName)) (index $ (printf "%s_repo_url" $repoName))}}'
          targetRevision: '{{default (index $.metadata.annotations (printf "%s_repo_revision" $repoName)) (index $ (printf "%s_repo_revision" $repoName))}}'
          ref: {{$repoName}}Values
      {{- end }}
       {{- if  eq .use_helm_repo_path "false" }}
        - repoURL: '{{ .chartRepo }}'
          chart: '{{ default .values.chartName .ecrChartName  }}'
          targetRevision: '{{.version}}'
      {{- else }}
        - repoURL: '{{ .metadata.annotations.fleet_repo_url }}'
          path: '{{ .values.chartPath }}'
          targetRevision: '{{ .metadata.annotations.fleet_repo_revision }}'
      {{- end }}
          helm:
            releaseName: '{{.nameNormalized}}'
            ignoreMissingValueFiles: true
            valuesObject:
              secretStore:
                enabled: true
                name: "fleet-eks-secret-store"
                kind: "SecretStore"
                region: '{{.metadata.annotations.aws_region}}'
              externalSecret:
                enabled: true
                server: self
                creationPolicy: Merge
                targetName: '{{.name}}'
                clusterName: '{{.name}}'
                secretManagerSecretName: 'hub/{{.name}}'
                secretStoreRefName: fleet-eks-secret-store
                secretStoreRefKind: SecretStore                
            ignoreMissingValueFiles: true
            valueFiles:
            {{- range $repoName := $repoNames }}
              {{- $repoRef := printf "%sValues" $repoName }}
              {{- $basePath := default (index $.metadata.annotations (printf "%s_repo_basepath" $repoName)) (index $ (printf "%s_repo_basepath" $repoName)) }}
              {{- range $pattern := $pathPatterns }}
              - ${{ $repoRef }}/{{ $basePath }}/{{ $pattern }}/{{ $commonValuesPath }}
              {{- end }}
            {{- end }}